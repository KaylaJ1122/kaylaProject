interceptor(인터셉터)
컨트롤러에 들어오는 요청 HttpRequest와 컨트롤러가 응답하는 HttpResponse를 가로채는 역할
= 관리자만 접근할 수 있는 관리자 페이지에 접근하기 전에 관리자 인증하는 용도로 활용.






1. 메인페이지(index)
2. 로그인, 회원가입
3. 아이디 중복검사기능
4. 인증번호 이메일 전송(안해도될듯)
5. 주소록 API 연동(안해도될듯)
6. 회원가입 유효성 검사
7. 이메일 형식 유효성 검사
8. 화면구성
9. 화면 동적 로딩
10. 메뉴
11. 상품 목록 조회 
12. 상품 상세 조회


* 기능목록
-> 사용자
회원가입(User)
로그인(User)
상품(목록조회, 상세조회, 상품주문) - Product
장바구니(상품 담고, 변경, 삭제) - Cart
주문 내역 조회(목록조회, 상세조회, 삭제) - Order
상품평(상품에대한작성, 변경) -> Coment
게시판(게시글 작성, 의경, 상품문의, 질문) -> Board

-> 관리자
회원(회원목록 조회, 변경, 삭제 가능)
로그인(관리자모드로 로그인)
상품(새상품 등록, 변경, 삭제)
상품평(상품평가에 대한 관리)
게시판(모든 사용자의 게시글을 조회, 변경, 삭제, 답변 가능)

순서 : controller -> service -> serviceImpl -> mapper(java)
src/main/java
->package
controller - Controller
domain - Board, Pagination, Reply, User
mapper - BoardMapper, UserMapper, CartMapper, OrderMapper, ProductMapper
service - BoardService(interface), BoardServiceImpl,Userservice(interface), UserserviceImpl, CartService(Impl), OrderServcice(Impl), ProductService(Impl)
config - SecurityConfig

src/main/resources ->mapper(xml)
xml - BoardMapper, UserMapper, CartMapper, OrderMapper, ProductMapper


DB
k_user
-> u_id, u_password, u_name, u_datetime
k_auth
-> u_id, u_auth
k_board
-> b_id, b_title, b_content, b_writer, b_datetime, b_view, b_group, b_groupOrd, b_depth
k_product
-> p_id(상품번호), p_name(상품이름), p_price(가격), p_detail(상세설명), p_photo(사진)
k_order
-> o_id(주문번호),
k_cart
-> 상품명(id)-int, 사용자아이디(userId)-string, 사용자이름(userName)-string, 상품번호(productName)-int, 상품이름(productName)-String 상품단가(procutPrice)-int, 구매수량(amount)-int, 상품가격(money)-int

관리자페이지(k_admin)
-> 사용자아이디(user_id), 사용자비밀번호(user_password), 사용자이름, 사용자이메일, 사용자 